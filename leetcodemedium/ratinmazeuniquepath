//62. Unique Paths
dp in 2d array ( formulae  for maths - (m+n-2)!/((m-1)!*(n-1)!)      )
1 1 1 1
1 2 3 4
1 3 6 10  ans = 10

//lekin agr obstacle ho pathat ho kisi khane mai to -
        dp[0][0] = obstacleGrid[0][0] == 0 ? 1 : 0;
        for (int i = 1; i < m; i++) {
            dp[i][0] = obstacleGrid[i][0] == 0 && dp[i-1][0] == 1 ? 1 : 0;
        }
        for (int j = 1; j < n; j++) {
            dp[0][j] = obstacleGrid[0][j] == 0 && dp[0][j-1] == 1 ? 1 : 0;
        }
        
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (obstacleGrid[i][j] == 0) {
                    dp[i][j] = dp[i-1][j] + dp[i][j-1];
                } else {
                    dp[i][j] = 0;
                }
            }
        }

//if we want to find the minimum path sum to reach from top left to bottom right like above is - 
grid[i][0] = grid[i][0]+grid[i-1][0];
grid[0][j] = grid[0][j]+grid[0][j-1];
grid[i][j]=Math.min(grid[i][j]+grid[i-1][j],grid[i][j]+grid[i][j-1]);