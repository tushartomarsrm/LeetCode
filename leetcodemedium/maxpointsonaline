Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane, return the maximum number of points that lie on the same straight line.

class Solution {
    public int maxPoints(int[][] points) {
        int n = points.length;
        int maxPoints = 0;
        for (int i = 0; i < n; i++) {
            Map<String, Integer> map = new HashMap<>();
            int samePoints = 1;
            int localMax = 0;
            for (int j = i + 1; j < n; j++) {
                if (points[i][0] == points[j][0] && points[i][1] == points[j][1]) {
                    samePoints++;
                } else {
                    int xDiff = points[j][0] - points[i][0];
                    int yDiff = points[j][1] - points[i][1];
                    int gcd = gcd(xDiff, yDiff);
                    xDiff /= gcd;
                    yDiff /= gcd;
                    String slope = xDiff + "," + yDiff;
                    map.put(slope, map.getOrDefault(slope, 0) + 1);
                    localMax = Math.max(localMax, map.get(slope));
                }
            }
            maxPoints = Math.max(maxPoints, localMax + samePoints);
        }
        return maxPoints;
    }

    private int gcd(int a, int b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }
}
