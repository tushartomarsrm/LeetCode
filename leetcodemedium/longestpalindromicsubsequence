//LCS - longest palndromic subsequence
class Solution {
    public int longestPalindromeSubseq(String s) 
    {
        StringBuilder sb = new StringBuilder(s);
        String rev = sb.reverse().toString();
        return lcs(s , rev);
    }
    
    private int lcs(String s , String t)
    {
        int a = s.length();
        int b = t.length();
        int[][] dp = new int[a+1][b+1];
        for(int i=0; i<a+1;i++) dp[i][0] = 0;
        for(int i=0; i<b+1;i++) dp[0][i] = 0;
        for(int i=1; i<a+1;i++)
        {
            for(int j=1; j<b+1;j++)
            {
                if(s.charAt(i-1) == t.charAt(j-1)) dp[i][j] = 1 + dp[i-1][j-1];
                else dp[i][j] = Math.max(dp[i][j-1] , dp[i-1][j]);
            }
        }
        
        return dp[a][b];
    }
}